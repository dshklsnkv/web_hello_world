"""add time_created

Revision ID: b35d1682bb7e
Revises: 0085fd4c4c89
Create Date: 2025-09-09 16:49:31.625839

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b35d1682bb7e'
down_revision: Union[str, Sequence[str], None] = '0085fd4c4c89'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('time_created', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'surname',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'login',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('users', 'date_reg')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('date_reg', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'login',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'surname',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('users', 'time_created')
    # ### end Alembic commands ###
